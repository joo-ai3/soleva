# Soleva HTTPS server configuration

# Upstreams (optional; direct service names also work). Using direct service names in proxy_pass.

server {
    listen 443 ssl;
    http2 on;
    server_name solevaeg.com www.solevaeg.com;

    # SSL certificates (managed by certbot)
    ssl_certificate /etc/letsencrypt/live/solevaeg.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/solevaeg.com/privkey.pem;

    # Include hardened SSL defaults
    include /etc/nginx/conf.d/ssl.conf;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google-analytics.com https://connect.facebook.net https://analytics.tiktok.com https://sc-static.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https://solevaeg.com https://www.google-analytics.com https://analytics.tiktok.com; frame-src 'none';" always;

    # Backend API
    location /api/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # CORS for API (HTTPS)
        add_header Access-Control-Allow-Origin "https://solevaeg.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        add_header Access-Control-Allow-Credentials true always;

        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://solevaeg.com";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # Django Admin
    location /admin/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static files (Django)
    location /static/ {
        alias /var/www/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        add_header X-Content-Type-Options nosniff;
        location ~* \.(woff|woff2|ttf|eot)$ {
            add_header Access-Control-Allow-Origin "*";
        }
    }

    # Media files (uploads)
    location /media/ {
        alias /var/www/media/;
        expires 1y;
        add_header Cache-Control "public";
        add_header X-Content-Type-Options nosniff;
        location ~* \.php$ {
            deny all;
        }
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Let's Encrypt challenge (keep accessible over HTTPS as well)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    # Block common attack vectors
    location ~* ^/(wp-admin|wp-login|wp-content|wp-includes|wordpress)/ { return 404; }
    location ~* \.php$ { return 404; }
    location ~* ^/(\.git|\.svn|\.hg|\.env|composer\.json|package\.json|Dockerfile|docker-compose\.yml|\.dockerignore|\.gitignore|\.htaccess|\.htpasswd)$ { return 404; }
    location ~* \.\./ { return 404; }
    location ~* ^/(boaform|xmlrpc\.php|readme\.txt|license\.txt|changelog\.txt)$ { return 404; }
    location ~* \.(asp|jsp|cgi|pl|py|exe|bat|cmd|com|scr|pif)$ { return 404; }

    # Frontend single-page app (Vite build served by frontend container)
    location / {
        proxy_pass http://frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
}
