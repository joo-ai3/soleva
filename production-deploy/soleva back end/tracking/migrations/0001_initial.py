# Generated by Django 4.2.7 on 2025-09-11 12:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TrackingPixel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('pixel_type', models.CharField(choices=[('facebook', 'Facebook Pixel'), ('google_analytics', 'Google Analytics'), ('google_gtm', 'Google Tag Manager'), ('tiktok', 'TikTok Pixel'), ('snapchat', 'Snapchat Pixel'), ('twitter', 'Twitter Pixel'), ('pinterest', 'Pinterest Tag'), ('linkedin', 'LinkedIn Insight Tag'), ('custom', 'Custom Pixel')], max_length=50, verbose_name='pixel type')),
                ('pixel_id', models.CharField(max_length=255, verbose_name='pixel ID')),
                ('access_token', models.CharField(blank=True, max_length=500, verbose_name='access token')),
                ('head_code', models.TextField(blank=True, help_text='Code to be placed in <head>', verbose_name='head code')),
                ('body_code', models.TextField(blank=True, help_text='Code to be placed in <body>', verbose_name='body code')),
                ('track_page_views', models.BooleanField(default=True, verbose_name='track page views')),
                ('track_ecommerce', models.BooleanField(default=True, verbose_name='track e-commerce events')),
                ('server_side_tracking', models.BooleanField(default=False, verbose_name='server-side tracking')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Tracking Pixel',
                'verbose_name_plural': 'Tracking Pixels',
                'db_table': 'tracking_pixels',
                'indexes': [models.Index(fields=['pixel_type', 'is_active'], name='tracking_pi_pixel_t_4fd4ba_idx')],
            },
        ),
        migrations.CreateModel(
            name='TrackingEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=100, verbose_name='event name')),
                ('event_type', models.CharField(choices=[('page_view', 'Page View'), ('view_content', 'View Content'), ('add_to_cart', 'Add to Cart'), ('initiate_checkout', 'Initiate Checkout'), ('add_payment_info', 'Add Payment Info'), ('purchase', 'Purchase'), ('search', 'Search'), ('lead', 'Lead'), ('complete_registration', 'Complete Registration'), ('custom', 'Custom Event')], max_length=50, verbose_name='event type')),
                ('session_id', models.CharField(blank=True, max_length=100, verbose_name='session ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('referrer', models.URLField(blank=True, verbose_name='referrer')),
                ('page_url', models.URLField(blank=True, verbose_name='page URL')),
                ('event_data', models.JSONField(blank=True, default=dict, verbose_name='event data')),
                ('product_id', models.CharField(blank=True, max_length=100, verbose_name='product ID')),
                ('product_name', models.CharField(blank=True, max_length=255, verbose_name='product name')),
                ('product_category', models.CharField(blank=True, max_length=255, verbose_name='product category')),
                ('product_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='product price')),
                ('quantity', models.PositiveIntegerField(blank=True, null=True, verbose_name='quantity')),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='value')),
                ('currency', models.CharField(default='EGP', max_length=3, verbose_name='currency')),
                ('order_id', models.CharField(blank=True, max_length=100, verbose_name='order ID')),
                ('is_processed', models.BooleanField(default=False, verbose_name='is processed')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='processed at')),
                ('error_message', models.TextField(blank=True, verbose_name='error message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('pixel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='tracking.trackingpixel')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tracking Event',
                'verbose_name_plural': 'Tracking Events',
                'db_table': 'tracking_events',
                'indexes': [models.Index(fields=['event_type', 'created_at'], name='tracking_ev_event_t_5fbdb8_idx'), models.Index(fields=['user', 'created_at'], name='tracking_ev_user_id_f32248_idx'), models.Index(fields=['session_id'], name='tracking_ev_session_958058_idx'), models.Index(fields=['pixel', 'is_processed'], name='tracking_ev_pixel_i_c6494c_idx'), models.Index(fields=['order_id'], name='tracking_ev_order_i_ea7f7d_idx')],
            },
        ),
        migrations.CreateModel(
            name='ConversionTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, verbose_name='session ID')),
                ('landing_at', models.DateTimeField(blank=True, null=True, verbose_name='landing at')),
                ('product_view_at', models.DateTimeField(blank=True, null=True, verbose_name='product view at')),
                ('add_to_cart_at', models.DateTimeField(blank=True, null=True, verbose_name='add to cart at')),
                ('checkout_start_at', models.DateTimeField(blank=True, null=True, verbose_name='checkout start at')),
                ('payment_info_at', models.DateTimeField(blank=True, null=True, verbose_name='payment info at')),
                ('purchase_at', models.DateTimeField(blank=True, null=True, verbose_name='purchase at')),
                ('first_product_viewed', models.CharField(blank=True, max_length=255, verbose_name='first product viewed')),
                ('products_viewed', models.JSONField(blank=True, default=list, verbose_name='products viewed')),
                ('cart_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='cart value')),
                ('order_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='order value')),
                ('order_id', models.CharField(blank=True, max_length=100, verbose_name='order ID')),
                ('utm_source', models.CharField(blank=True, max_length=255, verbose_name='UTM source')),
                ('utm_medium', models.CharField(blank=True, max_length=255, verbose_name='UTM medium')),
                ('utm_campaign', models.CharField(blank=True, max_length=255, verbose_name='UTM campaign')),
                ('utm_term', models.CharField(blank=True, max_length=255, verbose_name='UTM term')),
                ('utm_content', models.CharField(blank=True, max_length=255, verbose_name='UTM content')),
                ('referrer', models.URLField(blank=True, verbose_name='referrer')),
                ('device_type', models.CharField(blank=True, max_length=50, verbose_name='device type')),
                ('browser', models.CharField(blank=True, max_length=100, verbose_name='browser')),
                ('operating_system', models.CharField(blank=True, max_length=100, verbose_name='operating system')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='country')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Conversion Tracking',
                'verbose_name_plural': 'Conversion Tracking',
                'db_table': 'conversion_tracking',
                'indexes': [models.Index(fields=['session_id'], name='conversion__session_61ea95_idx'), models.Index(fields=['user', 'created_at'], name='conversion__user_id_ab9fe8_idx'), models.Index(fields=['utm_source', 'utm_campaign'], name='conversion__utm_sou_6ec898_idx'), models.Index(fields=['created_at'], name='conversion__created_6e6524_idx')],
            },
        ),
        migrations.CreateModel(
            name='AbandonedCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, verbose_name='session ID')),
                ('cart_items', models.JSONField(default=list, verbose_name='cart items')),
                ('cart_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='cart value')),
                ('recovery_emails_sent', models.PositiveIntegerField(default=0, verbose_name='recovery emails sent')),
                ('last_recovery_email_sent', models.DateTimeField(blank=True, null=True, verbose_name='last recovery email sent')),
                ('is_recovered', models.BooleanField(default=False, verbose_name='is recovered')),
                ('recovered_at', models.DateTimeField(blank=True, null=True, verbose_name='recovered at')),
                ('recovery_order_id', models.CharField(blank=True, max_length=100, verbose_name='recovery order ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abandoned_carts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Abandoned Cart',
                'verbose_name_plural': 'Abandoned Carts',
                'db_table': 'abandoned_carts',
                'indexes': [models.Index(fields=['user', 'is_recovered'], name='abandoned_c_user_id_1d07f7_idx'), models.Index(fields=['created_at'], name='abandoned_c_created_b7655e_idx')],
            },
        ),
    ]
