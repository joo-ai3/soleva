# Generated by Django 4.2.7 on 2025-09-11 12:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(max_length=120, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brands/', verbose_name='logo')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'db_table': 'product_brands',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=100, verbose_name='name (English)')),
                ('name_ar', models.CharField(max_length=100, verbose_name='name (Arabic)')),
                ('slug', models.SlugField(max_length=120, unique=True, verbose_name='slug')),
                ('description_en', models.TextField(blank=True, verbose_name='description (English)')),
                ('description_ar', models.TextField(blank=True, verbose_name='description (Arabic)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/', verbose_name='image')),
                ('icon', models.CharField(blank=True, max_length=100, verbose_name='icon class')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='display order')),
                ('meta_title_en', models.CharField(blank=True, max_length=60, verbose_name='meta title (English)')),
                ('meta_title_ar', models.CharField(blank=True, max_length=60, verbose_name='meta title (Arabic)')),
                ('meta_description_en', models.TextField(blank=True, max_length=160, verbose_name='meta description (English)')),
                ('meta_description_ar', models.TextField(blank=True, max_length=160, verbose_name='meta description (Arabic)')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'product_categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=255, verbose_name='name (English)')),
                ('name_ar', models.CharField(max_length=255, verbose_name='name (Arabic)')),
                ('slug', models.SlugField(max_length=280, unique=True, verbose_name='slug')),
                ('sku', models.CharField(max_length=100, unique=True, verbose_name='SKU')),
                ('short_description_en', models.TextField(max_length=500, verbose_name='short description (English)')),
                ('short_description_ar', models.TextField(max_length=500, verbose_name='short description (Arabic)')),
                ('description_en', models.TextField(verbose_name='description (English)')),
                ('description_ar', models.TextField(verbose_name='description (Arabic)')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='price')),
                ('compare_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='compare at price')),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='cost price')),
                ('track_inventory', models.BooleanField(default=True, verbose_name='track inventory')),
                ('inventory_quantity', models.PositiveIntegerField(default=0, verbose_name='inventory quantity')),
                ('low_stock_threshold', models.PositiveIntegerField(default=5, verbose_name='low stock threshold')),
                ('weight', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='weight (kg)')),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='length (cm)')),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='width (cm)')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='height (cm)')),
                ('meta_title_en', models.CharField(blank=True, max_length=60, verbose_name='meta title (English)')),
                ('meta_title_ar', models.CharField(blank=True, max_length=60, verbose_name='meta title (Arabic)')),
                ('meta_description_en', models.TextField(blank=True, max_length=160, verbose_name='meta description (English)')),
                ('meta_description_ar', models.TextField(blank=True, max_length=160, verbose_name='meta description (Arabic)')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('is_digital', models.BooleanField(default=False, verbose_name='is digital')),
                ('requires_shipping', models.BooleanField(default=True, verbose_name='requires shipping')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='display order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='published at')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=100, verbose_name='name (English)')),
                ('name_ar', models.CharField(max_length=100, verbose_name='name (Arabic)')),
                ('slug', models.SlugField(max_length=120, unique=True, verbose_name='slug')),
                ('attribute_type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('color', 'Color'), ('select', 'Select'), ('multiselect', 'Multi-select')], default='text', max_length=20, verbose_name='attribute type')),
                ('is_required', models.BooleanField(default=False, verbose_name='is required')),
                ('is_filterable', models.BooleanField(default=True, verbose_name='is filterable')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='display order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Product Attribute',
                'verbose_name_plural': 'Product Attributes',
                'db_table': 'product_attributes',
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_en', models.CharField(max_length=255, verbose_name='value (English)')),
                ('value_ar', models.CharField(max_length=255, verbose_name='value (Arabic)')),
                ('color_code', models.CharField(blank=True, max_length=7, verbose_name='color code')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='display order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='products.productattribute')),
            ],
            options={
                'verbose_name': 'Product Attribute Value',
                'verbose_name_plural': 'Product Attribute Values',
                'db_table': 'product_attribute_values',
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=100, unique=True, verbose_name='SKU')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='price')),
                ('compare_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='compare at price')),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='cost price')),
                ('inventory_quantity', models.PositiveIntegerField(default=0, verbose_name='inventory quantity')),
                ('weight', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='weight (kg)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='variants/', verbose_name='variant image')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Variant',
                'verbose_name_plural': 'Product Variants',
                'db_table': 'product_variants',
            },
        ),
        migrations.CreateModel(
            name='ProductVariantAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.productattribute')),
                ('value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.productattributevalue')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute_values', to='products.productvariant')),
            ],
            options={
                'verbose_name': 'Product Variant Attribute',
                'verbose_name_plural': 'Product Variant Attributes',
                'db_table': 'product_variant_attributes',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/', verbose_name='image')),
                ('alt_text_en', models.CharField(blank=True, max_length=255, verbose_name='alt text (English)')),
                ('alt_text_ar', models.CharField(blank=True, max_length=255, verbose_name='alt text (Arabic)')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='display order')),
                ('is_primary', models.BooleanField(default=False, verbose_name='is primary')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'db_table': 'product_images',
            },
        ),
        migrations.AddIndex(
            model_name='productattribute',
            index=models.Index(fields=['slug'], name='product_att_slug_ade8f1_idx'),
        ),
        migrations.AddIndex(
            model_name='productattribute',
            index=models.Index(fields=['attribute_type'], name='product_att_attribu_e98669_idx'),
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.brand'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.category'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.category'),
        ),
        migrations.AddIndex(
            model_name='brand',
            index=models.Index(fields=['slug'], name='product_bra_slug_f9fc27_idx'),
        ),
        migrations.AddIndex(
            model_name='brand',
            index=models.Index(fields=['is_active'], name='product_bra_is_acti_f8f423_idx'),
        ),
        migrations.AddConstraint(
            model_name='productvariantattribute',
            constraint=models.UniqueConstraint(fields=('variant', 'attribute'), name='unique_variant_attribute'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['product', 'is_active'], name='product_var_product_b96575_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['sku'], name='product_var_sku_3a95f0_idx'),
        ),
        migrations.AddIndex(
            model_name='productimage',
            index=models.Index(fields=['product', 'display_order'], name='product_ima_product_d1c257_idx'),
        ),
        migrations.AddIndex(
            model_name='productimage',
            index=models.Index(fields=['product', 'is_primary'], name='product_ima_product_c8c86a_idx'),
        ),
        migrations.AddConstraint(
            model_name='productimage',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('product',), name='unique_primary_image_per_product'),
        ),
        migrations.AddIndex(
            model_name='productattributevalue',
            index=models.Index(fields=['attribute', 'display_order'], name='product_att_attribu_be58c6_idx'),
        ),
        migrations.AddConstraint(
            model_name='productattributevalue',
            constraint=models.UniqueConstraint(fields=('attribute', 'value_en'), name='unique_attribute_value_en'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['slug'], name='products_slug_5e91f2_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='products_sku_fe2039_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'is_active'], name='products_categor_9e60b3_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['brand', 'is_active'], name='products_brand_i_2684af_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active', 'is_featured'], name='products_is_acti_d79db5_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='products_created_e1ba5f_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['price'], name='products_price_fe467e_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['slug'], name='product_cat_slug_801f9e_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['is_active', 'display_order'], name='product_cat_is_acti_495e6c_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['parent'], name='product_cat_parent__fb81c8_idx'),
        ),
    ]
