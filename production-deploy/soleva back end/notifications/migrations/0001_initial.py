# Generated by Django 4.2.7 on 2025-09-11 12:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('orders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True, verbose_name='template code')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('template_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification')], max_length=20, verbose_name='template type')),
                ('subject_en', models.CharField(blank=True, max_length=200, verbose_name='subject (English)')),
                ('subject_ar', models.CharField(blank=True, max_length=200, verbose_name='subject (Arabic)')),
                ('content_en', models.TextField(verbose_name='content (English)')),
                ('content_ar', models.TextField(verbose_name='content (Arabic)')),
                ('html_content_en', models.TextField(blank=True, verbose_name='HTML content (English)')),
                ('html_content_ar', models.TextField(blank=True, verbose_name='HTML content (Arabic)')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notification_templates',
                'indexes': [models.Index(fields=['code'], name='notificatio_code_aba995_idx'), models.Index(fields=['template_type'], name='notificatio_templat_b63ef6_idx')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('order_confirmation', 'Order Confirmation'), ('order_shipped', 'Order Shipped'), ('order_delivered', 'Order Delivered'), ('order_cancelled', 'Order Cancelled'), ('payment_received', 'Payment Received'), ('payment_failed', 'Payment Failed'), ('account_created', 'Account Created'), ('password_reset', 'Password Reset'), ('promotional', 'Promotional'), ('abandoned_cart', 'Abandoned Cart'), ('back_in_stock', 'Back in Stock'), ('price_drop', 'Price Drop'), ('system', 'System')], max_length=50, verbose_name='notification type')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('message', models.TextField(verbose_name='message')),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App Notification')], max_length=20, verbose_name='channel')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('read', 'Read')], default='pending', max_length=20, verbose_name='status')),
                ('recipient_email', models.EmailField(blank=True, max_length=254, verbose_name='recipient email')),
                ('recipient_phone', models.CharField(blank=True, max_length=20, verbose_name='recipient phone')),
                ('context_data', models.JSONField(blank=True, default=dict, verbose_name='context data')),
                ('error_message', models.TextField(blank=True, verbose_name='error message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='sent at')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='delivered at')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='read at')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='orders.order')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationtemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
            },
        ),
        migrations.CreateModel(
            name='EmailQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.EmailField(max_length=254, verbose_name='to email')),
                ('to_name', models.CharField(blank=True, max_length=200, verbose_name='to name')),
                ('subject', models.CharField(max_length=200, verbose_name='subject')),
                ('message', models.TextField(verbose_name='message')),
                ('html_message', models.TextField(blank=True, verbose_name='HTML message')),
                ('from_email', models.EmailField(blank=True, max_length=254, verbose_name='from email')),
                ('from_name', models.CharField(blank=True, max_length=200, verbose_name='from name')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20, verbose_name='priority')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='status')),
                ('retry_count', models.PositiveIntegerField(default=0, verbose_name='retry count')),
                ('max_retries', models.PositiveIntegerField(default=3, verbose_name='max retries')),
                ('context_data', models.JSONField(blank=True, default=dict, verbose_name='context data')),
                ('error_message', models.TextField(blank=True, verbose_name='error message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='scheduled at')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='sent at')),
                ('notification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Email Queue',
                'verbose_name_plural': 'Email Queue',
                'db_table': 'email_queue',
            },
        ),
        migrations.CreateModel(
            name='SMSQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_phone', models.CharField(max_length=20, verbose_name='to phone')),
                ('message', models.TextField(verbose_name='message')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20, verbose_name='priority')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='status')),
                ('retry_count', models.PositiveIntegerField(default=0, verbose_name='retry count')),
                ('max_retries', models.PositiveIntegerField(default=3, verbose_name='max retries')),
                ('provider', models.CharField(default='default', max_length=50, verbose_name='SMS provider')),
                ('provider_message_id', models.CharField(blank=True, max_length=100, verbose_name='provider message ID')),
                ('context_data', models.JSONField(blank=True, default=dict, verbose_name='context data')),
                ('error_message', models.TextField(blank=True, verbose_name='error message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='scheduled at')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='sent at')),
                ('notification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='notifications.notification')),
            ],
            options={
                'verbose_name': 'SMS Queue',
                'verbose_name_plural': 'SMS Queue',
                'db_table': 'sms_queue',
                'indexes': [models.Index(fields=['status', 'priority'], name='sms_queue_status_a5c277_idx'), models.Index(fields=['scheduled_at'], name='sms_queue_schedul_136417_idx'), models.Index(fields=['created_at'], name='sms_queue_created_e12fcc_idx')],
            },
        ),
        migrations.CreateModel(
            name='PushNotificationDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_token', models.TextField(unique=True, verbose_name='device token')),
                ('device_type', models.CharField(choices=[('ios', 'iOS'), ('android', 'Android'), ('web', 'Web')], max_length=20, verbose_name='device type')),
                ('device_name', models.CharField(blank=True, max_length=200, verbose_name='device name')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('last_used_at', models.DateTimeField(blank=True, null=True, verbose_name='last used at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='push_devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Push Notification Device',
                'verbose_name_plural': 'Push Notification Devices',
                'db_table': 'push_notification_devices',
                'indexes': [models.Index(fields=['user', 'is_active'], name='push_notifi_user_id_aac935_idx'), models.Index(fields=['device_token'], name='push_notifi_device__458122_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'status'], name='notificatio_user_id_8ab96f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='notificatio_notific_19df93_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['channel'], name='notificatio_channel_d2a579_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='notificatio_created_e4c995_idx'),
        ),
        migrations.AddIndex(
            model_name='emailqueue',
            index=models.Index(fields=['status', 'priority'], name='email_queue_status_8c516c_idx'),
        ),
        migrations.AddIndex(
            model_name='emailqueue',
            index=models.Index(fields=['scheduled_at'], name='email_queue_schedul_788567_idx'),
        ),
        migrations.AddIndex(
            model_name='emailqueue',
            index=models.Index(fields=['created_at'], name='email_queue_created_c725fe_idx'),
        ),
    ]
