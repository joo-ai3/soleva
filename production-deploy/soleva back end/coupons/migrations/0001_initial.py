# Generated by Django 4.2.7 on 2025-09-11 12:30

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='coupon code')),
                ('name_en', models.CharField(max_length=100, verbose_name='name (English)')),
                ('name_ar', models.CharField(max_length=100, verbose_name='name (Arabic)')),
                ('description_en', models.TextField(blank=True, verbose_name='description (English)')),
                ('description_ar', models.TextField(blank=True, verbose_name='description (Arabic)')),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed_amount', 'Fixed Amount')], max_length=20, verbose_name='discount type')),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='discount value')),
                ('minimum_order_amount', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True, verbose_name='minimum order amount')),
                ('max_discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='maximum discount amount')),
                ('free_shipping', models.BooleanField(default=False, verbose_name='free shipping')),
                ('usage_limit', models.PositiveIntegerField(blank=True, help_text='Total number of times this coupon can be used', null=True, verbose_name='usage limit')),
                ('usage_limit_per_customer', models.PositiveIntegerField(blank=True, null=True, verbose_name='usage limit per customer')),
                ('used_count', models.PositiveIntegerField(default=0, verbose_name='used count')),
                ('valid_from', models.DateField(verbose_name='valid from')),
                ('valid_until', models.DateField(blank=True, null=True, verbose_name='valid until')),
                ('first_time_customers_only', models.BooleanField(default=False, verbose_name='first time customers only')),
                ('exclude_sale_items', models.BooleanField(default=False, verbose_name='exclude sale items')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('applicable_categories', models.ManyToManyField(blank=True, related_name='coupons', to='products.category')),
                ('applicable_products', models.ManyToManyField(blank=True, related_name='coupons', to='products.product')),
                ('specific_customers', models.ManyToManyField(blank=True, help_text='Leave empty for all customers', related_name='available_coupons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Coupon',
                'verbose_name_plural': 'Coupons',
                'db_table': 'coupons',
            },
        ),
        migrations.CreateModel(
            name='CouponCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('color', models.CharField(default='#007bff', max_length=7, verbose_name='color')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
            ],
            options={
                'verbose_name': 'Coupon Category',
                'verbose_name_plural': 'Coupon Categories',
                'db_table': 'coupon_categories',
            },
        ),
        migrations.CreateModel(
            name='CouponUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='order ID')),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='discount amount')),
                ('order_total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='order total')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_records', to='coupons.coupon')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coupon_usage', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Coupon Usage',
                'verbose_name_plural': 'Coupon Usages',
                'db_table': 'coupon_usage',
                'indexes': [models.Index(fields=['coupon', 'user'], name='coupon_usag_coupon__5e60eb_idx'), models.Index(fields=['created_at'], name='coupon_usag_created_dc855d_idx'), models.Index(fields=['order_id'], name='coupon_usag_order_i_8a37c7_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['code'], name='coupons_code_94ae53_idx'),
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['is_active', 'valid_from', 'valid_until'], name='coupons_is_acti_17c5bb_idx'),
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['discount_type'], name='coupons_discoun_c38a3f_idx'),
        ),
    ]
