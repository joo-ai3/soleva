# Generated by Django 4.2.7 on 2025-09-11 12:39

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='EGP', max_length=3, verbose_name='Currency Code')),
                ('name', models.CharField(default='Egyptian Pound', max_length=50, verbose_name='Currency Name')),
                ('symbol', models.CharField(default='ج.م', max_length=5, verbose_name='Currency Symbol')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=100, verbose_name='Name (English)')),
                ('name_ar', models.CharField(max_length=100, verbose_name='Name (Arabic)')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Expense Category',
                'verbose_name_plural': 'Expense Categories',
            },
        ),
        migrations.CreateModel(
            name='ShippingLabel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label_number', models.CharField(max_length=50, unique=True, verbose_name='Label Number')),
                ('recipient_name', models.CharField(max_length=200, verbose_name='Recipient Name')),
                ('recipient_phone', models.CharField(max_length=20, verbose_name='Recipient Phone')),
                ('delivery_address', models.TextField(verbose_name='Delivery Address')),
                ('governorate', models.CharField(max_length=100, verbose_name='Governorate')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('shipping_cost', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Shipping Cost (EGP)')),
                ('cash_on_delivery', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Cash on Delivery (EGP)')),
                ('shipping_method', models.CharField(max_length=100, verbose_name='Shipping Method')),
                ('tracking_number', models.CharField(blank=True, max_length=100, verbose_name='Tracking Number')),
                ('special_instructions', models.TextField(blank=True, verbose_name='Special Instructions')),
                ('pdf_file', models.FileField(blank=True, upload_to='shipping_labels/%Y/%m/', verbose_name='PDF File')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_label', to='orders.order')),
            ],
            options={
                'verbose_name': 'Shipping Label',
                'verbose_name_plural': 'Shipping Labels',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SalesRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gross_revenue', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Gross Revenue (EGP)')),
                ('total_cost_of_goods', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Cost of Goods Sold (EGP)')),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Shipping Cost (EGP)')),
                ('packaging_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Packaging Cost (EGP)')),
                ('payment_gateway_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Payment Gateway Fee (EGP)')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Discount Amount (EGP)')),
                ('coupon_discount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Coupon Discount (EGP)')),
                ('gross_profit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Gross Profit (EGP)')),
                ('net_profit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Net Profit (EGP)')),
                ('profit_margin_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Profit Margin %')),
                ('sale_date', models.DateTimeField(verbose_name='Sale Date')),
                ('is_return', models.BooleanField(default=False, verbose_name='Is Return')),
                ('return_reason', models.TextField(blank=True, verbose_name='Return Reason')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sales_record', to='orders.order')),
            ],
            options={
                'verbose_name': 'Sales Record',
                'verbose_name_plural': 'Sales Records',
                'ordering': ['-sale_date'],
            },
        ),
        migrations.CreateModel(
            name='ProductCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_cost', models.DecimalField(decimal_places=2, help_text='Actual production cost per unit in EGP', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Production Cost (EGP)')),
                ('packaging_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Packaging Cost (EGP)')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('notes', models.TextField(blank=True, verbose_name='Cost Notes')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cost_info', to='products.product')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product Cost',
                'verbose_name_plural': 'Product Costs',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(max_length=50, unique=True, verbose_name='Invoice Number')),
                ('invoice_type', models.CharField(choices=[('sale', 'Sales Invoice'), ('return', 'Return Invoice'), ('proforma', 'Proforma Invoice')], default='sale', max_length=20, verbose_name='Invoice Type')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='draft', max_length=20, verbose_name='Status')),
                ('issue_date', models.DateField(verbose_name='Issue Date')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Subtotal (EGP)')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Tax Amount (EGP)')),
                ('shipping_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Shipping Amount (EGP)')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Discount Amount (EGP)')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Amount (EGP)')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('terms_conditions', models.TextField(blank=True, verbose_name='Terms & Conditions')),
                ('pdf_file', models.FileField(blank=True, upload_to='invoices/%Y/%m/', verbose_name='PDF File')),
                ('email_sent', models.BooleanField(default=False, verbose_name='Email Sent')),
                ('email_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Email Sent At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='orders.order')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('stock_in', 'Stock In'), ('stock_out', 'Stock Out'), ('sale', 'Sale'), ('return', 'Return'), ('adjustment', 'Adjustment'), ('damaged', 'Damaged')], max_length=20, verbose_name='Transaction Type')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('previous_stock', models.IntegerField(verbose_name='Previous Stock')),
                ('new_stock', models.IntegerField(verbose_name='New Stock')),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Unit Cost (EGP)')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Cost (EGP)')),
                ('reference_number', models.CharField(blank=True, max_length=100, verbose_name='Reference Number')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_transactions', to='orders.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_transactions', to='products.product')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventory_transactions', to='products.productvariant')),
            ],
            options={
                'verbose_name': 'Inventory Transaction',
                'verbose_name_plural': 'Inventory Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FinancialReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('daily', 'Daily Report'), ('weekly', 'Weekly Report'), ('monthly', 'Monthly Report'), ('quarterly', 'Quarterly Report'), ('yearly', 'Yearly Report'), ('custom', 'Custom Period Report')], max_length=20, verbose_name='Report Type')),
                ('report_format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('both', 'PDF & Excel')], default='pdf', max_length=10, verbose_name='Report Format')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('total_revenue', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Revenue (EGP)')),
                ('total_costs', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Costs (EGP)')),
                ('total_expenses', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Expenses (EGP)')),
                ('gross_profit', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Gross Profit (EGP)')),
                ('net_profit', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Net Profit (EGP)')),
                ('profit_margin', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Profit Margin %')),
                ('total_orders', models.IntegerField(verbose_name='Total Orders')),
                ('average_order_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Average Order Value (EGP)')),
                ('pdf_file', models.FileField(blank=True, upload_to='reports/%Y/%m/', verbose_name='PDF Report')),
                ('excel_file', models.FileField(blank=True, upload_to='reports/%Y/%m/', verbose_name='Excel Report')),
                ('generated_at', models.DateTimeField(auto_now_add=True, verbose_name='Generated At')),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Financial Report',
                'verbose_name_plural': 'Financial Reports',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='BusinessExpense',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('expense_type', models.CharField(choices=[('advertising', 'Advertising'), ('design', 'Design'), ('photography', 'Photography'), ('shipping', 'Shipping'), ('packaging', 'Packaging Materials'), ('office', 'Office Expenses'), ('utilities', 'Utilities'), ('software', 'Software/Tools'), ('marketing', 'Marketing'), ('other', 'Other')], max_length=20, verbose_name='Expense Type')),
                ('title', models.CharField(max_length=200, verbose_name='Expense Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Amount (EGP)')),
                ('expense_date', models.DateField(verbose_name='Expense Date')),
                ('payment_method', models.CharField(blank=True, max_length=50, verbose_name='Payment Method')),
                ('receipt_number', models.CharField(blank=True, max_length=100, verbose_name='Receipt/Invoice Number')),
                ('supplier_vendor', models.CharField(blank=True, max_length=200, verbose_name='Supplier/Vendor')),
                ('is_recurring', models.BooleanField(default=False, verbose_name='Is Recurring')),
                ('recurring_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=20, verbose_name='Recurring Frequency')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200, verbose_name='Tags')),
                ('receipt_file', models.FileField(blank=True, upload_to='receipts/%Y/%m/', verbose_name='Receipt File')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='accounting.expensecategory')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Business Expense',
                'verbose_name_plural': 'Business Expenses',
                'ordering': ['-expense_date', '-created_at'],
            },
        ),
    ]
