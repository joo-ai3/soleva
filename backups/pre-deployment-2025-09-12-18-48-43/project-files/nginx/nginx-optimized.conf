# Optimized Nginx Configuration for Soleva Platform
# Designed for Docker containers with React frontend and Django backend

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events block - optimized for high performance
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
    worker_rlimit_nofile 4096;
}

# HTTP block
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Enhanced logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main buffer=16k flush=2m;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    reset_timedout_connection on;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_max_body_size 50M;

    # Timeouts
    client_header_timeout 60s;
    client_body_timeout 60s;
    send_timeout 60s;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Enhanced Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/csv
        application/javascript
        application/json
        application/xml
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/font-woff
        application/font-woff2;

    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Map for cache control
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  1h;
        text/css                   1y;
        application/javascript     1y;
        ~image/                    1y;
        font/woff                  1y;
        font/woff2                 1y;
        application/font-woff      1y;
        application/font-woff2     1y;
    }

    # Upstream definitions
    upstream backend {
        server backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream frontend {
        server frontend:80 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # HTTP to HTTPS redirect for all domains
    server {
        listen 80;
        server_name solevaeg.com www.solevaeg.com;
        
        # Let's Encrypt challenge location
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }
        
        # Health check for load balancer
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect everything else to HTTPS
        location / {
            return 301 https://solevaeg.com$request_uri;
        }
    }

    # HTTPS redirect for www subdomain
    server {
        listen 443 ssl http2;
        server_name www.solevaeg.com;
        
        # SSL Configuration (Let's Encrypt)
        ssl_certificate /etc/letsencrypt/live/solevaeg.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/solevaeg.com/privkey.pem;
        
        # SSL optimization
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # 301 redirect to primary domain
        return 301 https://solevaeg.com$request_uri;
    }

    # Main server configuration for solevaeg.com
    server {
        listen 443 ssl http2;
        server_name solevaeg.com;
        
        # SSL Configuration
        ssl_certificate /etc/letsencrypt/live/solevaeg.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/solevaeg.com/privkey.pem;
        
        # SSL optimization
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        
        # Content Security Policy for Soleva
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google-analytics.com https://connect.facebook.net https://analytics.tiktok.com https://sc-static.net https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:; img-src 'self' data: https: blob:; connect-src 'self' https://solevaeg.com https://www.google-analytics.com https://analytics.tiktok.com; frame-src 'self' https://www.facebook.com; object-src 'none'; base-uri 'self';" always;
        
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        limit_conn conn_limit_per_ip 20;

        # Backend API - Enhanced proxy configuration
        location /api/ {
            # Rate limiting for API
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin "https://solevaeg.com" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-CSRF-Token" always;
            add_header Access-Control-Allow-Credentials true always;
            
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://solevaeg.com";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-CSRF-Token";
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }
        
        # Django Admin with enhanced security
        location /admin/ {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Additional security headers for admin
            add_header X-Frame-Options DENY always;
            
            # Optional: IP whitelist for admin access
            # allow YOUR_ADMIN_IP;
            # deny all;
        }
        
        # Static files (Django) with aggressive caching
        location /static/ {
            alias /var/www/static/;
            
            # Cache control
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Rate limiting for static files
            limit_req zone=static burst=100 nodelay;
            
            # Security headers
            add_header X-Content-Type-Options nosniff always;
            
            # CORS for fonts and assets
            location ~* \.(woff|woff2|ttf|eot|otf)$ {
                add_header Access-Control-Allow-Origin "*";
                expires 1y;
            }
            
            # CSS and JS files
            location ~* \.(css|js)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                gzip_static on;
            }
            
            # Images
            location ~* \.(jpg|jpeg|png|gif|ico|svg|webp|avif)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary "Accept";
            }
        }
        
        # Media files (uploads) with security
        location /media/ {
            alias /var/www/media/;
            
            # Cache control for uploads
            expires 1M;
            add_header Cache-Control "public";
            
            # Security for uploaded files
            add_header X-Content-Type-Options nosniff always;
            add_header Content-Security-Policy "default-src 'none'; img-src 'self'; style-src 'unsafe-inline';" always;
            
            # Prevent script execution in media directory
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }
            
            # Image optimization headers
            location ~* \.(jpg|jpeg|png|gif|webp|avif)$ {
                add_header Vary "Accept";
                expires 1M;
            }
        }
        
        # Authentication endpoints with strict rate limiting
        location /api/auth/ {
            limit_req zone=login burst=10 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Enhanced security for auth endpoints
            add_header X-Frame-Options DENY always;
        }
        
        # Frontend static assets (React build files)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            
            # Aggressive caching for frontend assets
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Compression
            gzip_static on;
            
            # CORS for fonts
            location ~* \.(woff|woff2|ttf|eot|otf)$ {
                add_header Access-Control-Allow-Origin "*";
            }
        }
        
        # Frontend (React app) - catch all for SPA routing
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for development
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Cache control for HTML
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # SEO files
        location = /robots.txt {
            proxy_pass http://frontend;
            expires 1d;
            add_header Cache-Control "public";
        }
        
        location = /sitemap.xml {
            proxy_pass http://frontend;
            expires 1d;
            add_header Cache-Control "public";
        }
        
        location = /favicon.ico {
            proxy_pass http://frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # Security.txt
        location /.well-known/security.txt {
            alias /var/www/static/security.txt;
            expires 1d;
        }
        
        # Block access to sensitive files
        location ~ /\.(ht|git|svn|hg|bzr) {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to PHP files (security)
        location ~ \.php$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        # Error page handling
        location = /404.html {
            proxy_pass http://frontend;
            internal;
        }
        
        location = /50x.html {
            proxy_pass http://frontend;
            internal;
        }
    }
}
