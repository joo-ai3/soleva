name: Backend CI/CD

on:
  push:
    branches: [main, production]
    paths: ['soleva back end/**']
  pull_request:
    branches: [main]
    paths: ['soleva back end/**']

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./soleva back end
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: soleva_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: './soleva back end/requirements.txt'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/soleva_test
          REDIS_URL: redis://localhost:6379/0
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: 'False'
        run: |
          python manage.py collectstatic --noinput
          python manage.py migrate
          python manage.py test
      
      - name: Generate coverage report
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/soleva_test
          REDIS_URL: redis://localhost:6379/0
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: 'False'
        run: |
          pip install coverage
          coverage run --source='.' manage.py test
          coverage xml
      
      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: './soleva back end/coverage.xml'
          retention-days: 7

  security-scan:
    runs-on: ubuntu-latest
    needs: test-backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './soleva back end'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results-backend
          path: trivy-results.sarif
          retention-days: 30

  build-and-push:
    runs-on: ubuntu-latest
    needs: [test-backend, security-scan]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/backend
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./soleva back end
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
