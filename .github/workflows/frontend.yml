name: Frontend CI/CD

on:
  push:
    branches: [main, production]
    paths: ['soleva front end/**']
  pull_request:
    branches: [main]
    paths: ['soleva front end/**']

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./soleva front end
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'soleva front end/package-lock.json'
      
      - name: Install dependencies
        run: |
          # Try npm ci first, fallback to npm install if cache issues occur
          npm ci || (npm cache clean --force && npm install)
          # Explicitly install rollup with native dependencies to avoid Linux binary issues
          npm install rollup@latest
        env:
          # Force npm to rebuild native dependencies
          npm_config_build_from_source: true
      
      - name: Type check
        run: npm run type-check
      
      - name: Lint code
        run: npm run lint
      
      - name: Build application
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: './soleva front end/dist'
          retention-days: 7

  security-scan:
    runs-on: ubuntu-latest
    needs: test-frontend
    
    defaults:
      run:
        working-directory: ./soleva front end
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './soleva front end'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.sarif
          retention-days: 30

  build-and-push:
    runs-on: ubuntu-latest
    needs: [test-frontend, security-scan]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/frontend
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./soleva front end
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
